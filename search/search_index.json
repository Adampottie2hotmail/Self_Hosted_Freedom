{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Your Self-Hosting Journey \ud83d\ude80","text":"<p>Welcome to Aroic-Studios, your go-to resource for starting your self-hosting adventure!  </p>"},{"location":"#why-self-host","title":"Why Self-Host?","text":"<p>Self-hosting gives you privacy, control, and flexibility over your data and services. Whether you want to run your own cloud storage, password manager, media server, or website, you\u2019re in the right place.  </p>"},{"location":"#what-youll-learn","title":"What You'll Learn","text":"<p>\ud83d\udd39 Set up your first self-hosted server \ud83d\udd39 Choose the best hardware and software \ud83d\udd39 Secure your setup with firewalls &amp; encryption \ud83d\udd39 Run services like Nextcloud, Jellyfin, and more \ud83d\udd39 Automate and optimize your home lab </p>"},{"location":"#get-started","title":"Get Started","text":"<p>\ud83d\udc49 Beginner\u2019s Guide to Self-Hosting \ud83d\udc49 Recommended Software &amp; Tools \ud83d\udc49 Security Best Practices </p> <p>Ready to take control? Let\u2019s get started! \ud83d\udca1</p>"},{"location":"beginner_guide/","title":"Beginner's Guide to Self-Hosting","text":"<p>Self-hosting is the practice of running your own servers to host websites, applications, or services instead of relying on third-party providers. This guide will walk you through the basics of self-hosting and getting started.</p>"},{"location":"beginner_guide/#why-self-host","title":"Why Self-Host?","text":"<ul> <li>Privacy: Keep control over your data.</li> <li>Customization: Full control over configurations.</li> <li>Cost Savings: Avoid subscription fees for services.</li> <li>Learning Opportunity: Gain experience in system administration and networking.</li> </ul>"},{"location":"beginner_guide/#what-you-need","title":"What You Need","text":"<ul> <li>A Server: This can be a dedicated server, a virtual private server (VPS), or an old computer.</li> <li>Operating System: Linux (Ubuntu, Debian) is a popular choice, but Windows or macOS can also work.</li> <li>Networking Knowledge: Basic understanding of IP addresses, ports, and domains.</li> <li>A Domain Name (Optional): If you want a public-facing service.</li> </ul>"},{"location":"beginner_guide/#setting-up-your-self-hosted-server","title":"Setting Up Your Self-Hosted Server","text":""},{"location":"beginner_guide/#1-choose-your-hosting-environment","title":"1. Choose Your Hosting Environment","text":"<ul> <li>Home Server: A spare computer or Raspberry Pi.</li> <li>Cloud VPS: Services like Linode, DigitalOcean, or AWS.</li> </ul>"},{"location":"beginner_guide/#2-install-an-operating-system","title":"2. Install an Operating System","text":"<ul> <li>Popular choices: Ubuntu Server, Debian, or CentOS.</li> <li>Install updates:   <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre></li> </ul>"},{"location":"beginner_guide/#3-set-up-remote-access","title":"3. Set Up Remote Access","text":"<ul> <li>Enable SSH:   <pre><code>sudo apt install openssh-server -y\n</code></pre></li> <li>Connect via SSH:   <pre><code>ssh username@your-server-ip\n</code></pre></li> </ul>"},{"location":"beginner_guide/#4-install-necessary-software","title":"4. Install Necessary Software","text":"<ul> <li>Web Server (Apache, Nginx)   <pre><code>sudo apt install nginx -y\n</code></pre></li> <li>Database (MySQL, PostgreSQL)   <pre><code>sudo apt install mysql-server -y\n</code></pre></li> <li>Reverse Proxy (Caddy, Nginx)</li> <li>Containers (Docker, Portainer) for easy management   <pre><code>sudo apt install docker.io -y\n</code></pre></li> </ul>"},{"location":"beginner_guide/#5-secure-your-server","title":"5. Secure Your Server","text":"<ul> <li>Create a Firewall Rule (UFW example):   <pre><code>sudo ufw allow ssh\nsudo ufw enable\n</code></pre></li> <li>Use Fail2Ban to prevent brute force attacks: <pre><code>sudo apt install fail2ban -y\n</code></pre></li> <li>Enable SSL with Let's Encrypt: <pre><code>sudo apt install certbot python3-certbot-nginx -y\nsudo certbot --nginx -d yourdomain.com\n</code></pre></li> </ul>"},{"location":"beginner_guide/#6-host-your-first-service","title":"6. Host Your First Service","text":"<ul> <li>Example: Self-host a personal website with Nginx.</li> <li>Place your files in <code>/var/www/html/</code>.</li> <li>Restart Nginx:   <pre><code>sudo systemctl restart nginx\n</code></pre></li> </ul>"},{"location":"beginner_guide/#useful-self-hosted-applications","title":"Useful Self-Hosted Applications","text":"<ul> <li>Nextcloud \u2013 Personal cloud storage</li> <li>Pi-hole \u2013 Network-wide ad blocker</li> <li>Home Assistant \u2013 Smart home automation</li> <li>Bitwarden \u2013 Self-hosted password manager</li> </ul>"},{"location":"beginner_guide/#conclusion","title":"Conclusion","text":"<p>Self-hosting allows you to take control of your data and services. Start small, secure your setup, and explore different applications to host. Happy self-hosting!</p>"},{"location":"beginner_guide/software_tools/","title":"Recommended Software &amp; Tools","text":""},{"location":"beginner_guide/software_tools/#introduction","title":"Introduction","text":"<p>Self-hosting allows you to run your own services instead of relying on third-party providers. Below is a list of recommended software and tools categorized by their functionality.</p>"},{"location":"beginner_guide/software_tools/#file-management","title":"\ud83d\udcc2 File Management","text":"<ul> <li>Nextcloud - Self-hosted cloud storage with file synchronization and sharing.</li> <li>Seafile - High-performance file sync and share solution.</li> <li>Syncthing - Decentralized file synchronization tool.</li> </ul>"},{"location":"beginner_guide/software_tools/#email-hosting","title":"\ud83d\udce7 Email Hosting","text":"<ul> <li>Mailcow - Full-featured mail server based on Docker.</li> <li>Mail-in-a-Box - Easy-to-deploy email server.</li> <li>Postfix &amp; Dovecot - Traditional mail server setup for advanced users.</li> </ul>"},{"location":"beginner_guide/software_tools/#rss-news","title":"\ud83d\udcf0 RSS &amp; News","text":"<ul> <li>FreshRSS - Lightweight, customizable RSS reader.</li> <li>Tiny Tiny RSS - A web-based RSS feed reader.</li> <li>Miniflux - Minimalist RSS reader with a focus on simplicity.</li> </ul>"},{"location":"beginner_guide/software_tools/#home-automation","title":"\ud83c\udfe0 Home Automation","text":"<ul> <li>Home Assistant - Open-source home automation platform.</li> <li>OpenHAB - Another flexible home automation software.</li> <li>Domoticz - Lightweight and versatile automation system.</li> </ul>"},{"location":"beginner_guide/software_tools/#bookmarking-notes","title":"\ud83d\udcd1 Bookmarking &amp; Notes","text":"<ul> <li>Wallabag - Save and read articles later.</li> <li>Shaarli - Minimalist bookmark manager.</li> <li>Joplin - Secure note-taking and to-do application.</li> </ul>"},{"location":"beginner_guide/software_tools/#media-streaming","title":"\ud83c\udf9e\ufe0f Media Streaming","text":"<ul> <li>Plex - Media streaming server with remote access.</li> <li>Jellyfin - Open-source alternative to Plex.</li> <li>Emby - Hybrid media server solution.</li> <li>Navidrome - Music streaming service</li> </ul>"},{"location":"beginner_guide/software_tools/#security-vpn","title":"\ud83d\udee1\ufe0f Security &amp; VPN","text":"<ul> <li>WireGuard - High-performance VPN.</li> <li>OpenVPN - Secure and widely supported VPN solution.</li> <li>Pi-hole - Network-wide ad blocker.</li> </ul>"},{"location":"beginner_guide/software_tools/#documentation-wiki","title":"\ud83d\udcdc Documentation &amp; Wiki","text":"<ul> <li>Wiki.js - Modern wiki software with multiple storage backends.</li> <li>BookStack - Simple and elegant documentation management.</li> <li>HedgeDoc - Collaborative markdown editing.</li> </ul>"},{"location":"beginner_guide/software_tools/#server-management","title":"\ud83d\udda5\ufe0f Server Management","text":"<ul> <li>Portainer - Simple Docker container management.</li> <li>Cockpit - Web-based server monitoring.</li> <li>Webmin - GUI-based system administration tool.</li> </ul>"},{"location":"beginner_guide/software_tools/#self-hosting-platforms","title":"\ud83d\udce1 Self-Hosting Platforms","text":"<ul> <li>Yunohost - Simplifies self-hosting with a user-friendly interface.</li> <li>CapRover - PaaS for deploying apps easily.</li> <li>Sandstorm - Secure self-hosting for personal and team apps.</li> </ul>"},{"location":"beginner_guide/software_tools/#conclusion","title":"\ud83d\udcdd Conclusion","text":"<p>Self-hosting gives you control over your data and enhances privacy. Choose the tools that best suit your needs and ensure proper security measures while hosting your services.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/02/20/welcome-to-aroic-studios/","title":"Welcome to Aroic-Studios!","text":""},{"location":"blog/2024/02/20/welcome-to-aroic-studios/#your-one-stop-shop-for-everything-self-hosted","title":"Your One-Stop Shop for Everything Self-Hosted \ud83d\ude80","text":"<p>Welcome to Aroic-Studios, the ultimate destination for self-hosting enthusiasts! Whether you're just getting started or you're a seasoned pro, we've got everything you need to take control of your own services, data, and digital environment. Any issues, please raise an issue on our GitHub</p>"},{"location":"blog/2024/02/20/welcome-to-aroic-studios/#what-we-offer","title":"What We Offer","text":"<ul> <li>Guides &amp; Tutorials \u2013 Step-by-step walkthroughs to help you set up and manage self-hosted applications.</li> <li>Software Reviews \u2013 Discover the best self-hosted solutions for your needs.</li> <li>Community &amp; Support \u2013 Connect with like-minded individuals and get expert advice.</li> <li>Security &amp; Optimization Tips \u2013 Keep your self-hosted setup secure and efficient.</li> </ul>"},{"location":"blog/2024/02/20/welcome-to-aroic-studios/#why-self-host","title":"Why Self-Host?","text":"<p>\u2705 Full Control \u2013 Own your data and services. \u2705 Privacy &amp; Security \u2013 Reduce reliance on third-party platforms. \u2705 Customization \u2013 Tailor your setup to fit your needs. \u2705 Cost Savings \u2013 Avoid recurring fees for cloud services.</p>"},{"location":"blog/2024/02/20/welcome-to-aroic-studios/#join-us-on-the-journey","title":"Join Us on the Journey","text":"<p>At Aroic-Studios, we believe in empowering individuals and businesses to take control of their digital presence. Explore our guides, join our community, and start building your self-hosted future today!</p> <p>\ud83d\ude80 Get Started Now!</p> <p>\"Your data, your rules, your world. Welcome to the future of self-hosting.\"</p> <p>Stay connected with us for the latest updates and content!</p> <p>\ud83c\udf10 Website | \ud83d\udee0\ufe0f GitHub</p>"},{"location":"os/","title":"Operating Systems","text":"<p>Here you will find detailed instructions for how to setup each OS (Operating System)</p> <p> \u00a0 Ubuntu 22.04 </p> <p> \u00a0 Windows 10 / 11 </p>"},{"location":"os/ubuntu_22.04/","title":"Setting Up Ubuntu 22.04: Complete Guide","text":""},{"location":"os/ubuntu_22.04/#1-download-ubuntu-2204","title":"1. Download Ubuntu 22.04","text":"<p>Ubuntu 22.04 can be downloaded from the official website:</p> <ul> <li>Ubuntu 22.04 LTS Download</li> </ul> <p>Choose the Desktop or Server edition based on your needs.</p>"},{"location":"os/ubuntu_22.04/#2-create-a-bootable-usb","title":"2. Create a Bootable USB","text":"<p>To install Ubuntu, you need to create a bootable USB drive. Use one of the following tools:</p> <ul> <li>Windows: Rufus</li> <li>Linux: <code>dd</code> or Balena Etcher</li> <li>Mac: Balena Etcher</li> </ul>"},{"location":"os/ubuntu_22.04/#create-a-bootable-usb-linux-cli","title":"Create a Bootable USB (Linux CLI):","text":"<p><pre><code>sudo dd if=~/Downloads/ubuntu-22.04.iso of=/dev/sdX bs=4M status=progress\n</code></pre> Replace <code>/dev/sdX</code> with your actual USB drive.</p>"},{"location":"os/ubuntu_22.04/#3-boot-from-usb","title":"3. Boot from USB","text":"<ol> <li>Insert the bootable USB drive into your computer.</li> <li>Restart and enter the BIOS/UEFI (<code>F2</code>, <code>F12</code>, <code>Del</code>, or <code>Esc</code> depending on your system).</li> <li>Select the USB drive as the primary boot device.</li> <li>Save and exit BIOS.</li> </ol>"},{"location":"os/ubuntu_22.04/#4-install-ubuntu-2204","title":"4. Install Ubuntu 22.04","text":"<ol> <li>Select \"Try Ubuntu\" or \"Install Ubuntu\".</li> <li>Choose your Language and click Continue.</li> <li>Select Keyboard Layout.</li> <li>Choose Installation Type:</li> <li>Normal Installation (Recommended for most users).</li> <li>Minimal Installation (For a lightweight setup).</li> <li>Select Download updates while installing Ubuntu.</li> <li>Choose Erase disk and install Ubuntu (or manual partitioning for advanced users).</li> <li>Select Time Zone and enter Username &amp; Password.</li> <li>Click Install Now \u2192 Restart when prompted.</li> </ol>"},{"location":"os/ubuntu_22.04/#5-post-installation-setup","title":"5. Post-Installation Setup","text":""},{"location":"os/ubuntu_22.04/#update-upgrade-system","title":"Update &amp; Upgrade System","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre>"},{"location":"os/ubuntu_22.04/#install-essential-packages","title":"Install Essential Packages","text":"<pre><code>sudo apt install -y curl wget git vim htop\n</code></pre>"},{"location":"os/ubuntu_22.04/#enable-firewall","title":"Enable Firewall","text":"<pre><code>sudo ufw enable\nsudo ufw allow OpenSSH  # If you plan to use SSH\n</code></pre>"},{"location":"os/ubuntu_22.04/#set-up-additional-software-optional","title":"Set Up Additional Software (Optional)","text":"<ul> <li>Snap Applications: <pre><code>sudo snap install vlc\n</code></pre></li> <li>Flatpak: <pre><code>sudo apt install flatpak -y\n</code></pre></li> </ul>"},{"location":"os/ubuntu_22.04/#install-nvidia-drivers-if-needed","title":"Install NVIDIA Drivers (if needed)","text":"<pre><code>sudo ubuntu-drivers autoinstall\n</code></pre>"},{"location":"os/ubuntu_22.04/#6-setting-up-remote-access-ssh","title":"6. Setting Up Remote Access (SSH)","text":"<p>If you want to access your system remotely: <pre><code>sudo apt install openssh-server -y\nsudo systemctl enable ssh\nsudo systemctl start ssh\n</code></pre> Check your IP with: <pre><code>ip a\n</code></pre> Then connect via SSH from another machine: <pre><code>ssh username@your-ip-address\n</code></pre></p>"},{"location":"os/ubuntu_22.04/#7-final-steps","title":"7. Final Steps","text":"<ul> <li>Set a Static IP: Use the settings app on the desktop version.</li> <li>Create Backups: Set up <code>Timeshift</code> for system snapshots.</li> <li>Customize UI: Use <code>gnome-tweaks</code> for additional desktop customization.</li> <li>Enjoy Ubuntu 22.04! \ud83d\ude80</li> </ul> <p>This guide covers the complete setup process for Ubuntu 22.04 from scratch.</p>"},{"location":"os/windows/","title":"Setting Up Windows 10/11 as a Server: A Step-by-Step Guide","text":""},{"location":"os/windows/#1-install-windows-1011","title":"1. Install Windows 10/11","text":"<p>If you haven\u2019t installed Windows yet, follow these steps: - Download the ISO: Get Windows 10/11 from Microsoft's official website. - Create a Bootable USB: Use Rufus or Windows Media Creation Tool. - Install Windows: Boot from the USB, select your language, and install the OS.</p> <p>Post-Installation Setup: - Set up an Administrator Account. - Disable unnecessary telemetry (<code>Settings &gt; Privacy</code>). - Install essential drivers (Chipset, LAN, Graphics, etc.). - Enable Remote Desktop (<code>Settings &gt; System &gt; Remote Desktop</code>).</p>"},{"location":"os/windows/#2-configure-networking","title":"2. Configure Networking","text":"<p>A server requires a static IP address to function reliably.</p>"},{"location":"os/windows/#set-static-ip","title":"Set Static IP:","text":"<ol> <li>Go to: <code>Control Panel &gt; Network and Sharing Center &gt; Change adapter settings</code></li> <li>Right-click your active network &gt; Properties.</li> <li>Select Internet Protocol Version 4 (TCP/IPv4) &gt; Properties.</li> <li>Choose \"Use the following IP address\", enter:</li> <li>IP Address: (e.g., <code>192.168.1.100</code>)</li> <li>Subnet Mask: (e.g., <code>255.255.255.0</code>)</li> <li>Default Gateway: (Your router's IP, e.g., <code>192.168.1.1</code>)</li> <li>Preferred DNS: (Google: <code>8.8.8.8</code>, Cloudflare: <code>1.1.1.1</code>)</li> </ol>"},{"location":"os/windows/#3-install-server-features","title":"3. Install Server Features","text":"<p>Windows 10/11 doesn\u2019t come with Windows Server features, but you can enable similar functionality.</p>"},{"location":"os/windows/#enable-file-and-printer-sharing","title":"Enable File and Printer Sharing","text":"<ol> <li>Open Control Panel &gt; Network and Sharing Center.</li> <li>Click Change advanced sharing settings.</li> <li>Turn on:</li> <li>Network discovery</li> <li>File and printer sharing</li> <li>Password-protected sharing (optional)</li> </ol>"},{"location":"os/windows/#enable-smb-for-file-sharing","title":"Enable SMB for File Sharing","text":"<ol> <li>Open Control Panel &gt; Programs &gt; Turn Windows features on or off.</li> <li>Enable SMB 1.0/CIFS File Sharing Support.</li> <li>Click OK and restart.</li> </ol>"},{"location":"os/windows/#set-up-a-shared-folder","title":"Set Up a Shared Folder","text":"<ol> <li>Right-click a folder &gt; Properties &gt; Sharing tab.</li> <li>Click Advanced Sharing &gt; Share this folder.</li> <li>Set permissions (<code>Everyone</code> for open access or restrict users).</li> <li>Use <code>\\\\yourserverIP\\sharename</code> to access it.</li> </ol>"},{"location":"os/windows/#4-install-and-configure-a-web-server-iis","title":"4. Install and Configure a Web Server (IIS)","text":"<p>Windows has a built-in web server called IIS (Internet Information Services).</p>"},{"location":"os/windows/#enable-iis","title":"Enable IIS:","text":"<ol> <li>Open Control Panel &gt; Programs &gt; Turn Windows features on or off.</li> <li>Scroll down, check Internet Information Services (IIS).</li> <li>Expand IIS &gt; World Wide Web Services and enable:</li> <li>Common HTTP Features</li> <li>Application Development Features (CGI, ASP.NET)</li> <li>Security (Basic Authentication, Windows Authentication)</li> <li>Click OK and restart.</li> </ol>"},{"location":"os/windows/#configure-iis","title":"Configure IIS:","text":"<ol> <li>Open IIS Manager (<code>Windows + R</code>, type <code>inetmgr</code>, press Enter).</li> <li>Expand Sites, right-click Default Web Site, select Bindings.</li> <li>Click Add, set:</li> <li>Type: HTTP</li> <li>IP Address: (Choose your static IP)</li> <li>Port: 80 (or 8080 if 80 is taken)</li> <li>Place your website files in <code>C:\\inetpub\\wwwroot\\</code>.</li> </ol> <p>To access the website: - From local network: <code>http://192.168.1.100</code> - From the internet (requires port forwarding): <code>http://yourpublicIP</code></p>"},{"location":"os/windows/#5-set-up-remote-access","title":"5. Set Up Remote Access","text":""},{"location":"os/windows/#enable-remote-desktop","title":"Enable Remote Desktop","text":"<ol> <li>Go to <code>Settings &gt; System &gt; Remote Desktop</code>.</li> <li>Enable Remote Desktop and Allow connections.</li> <li>Open Windows Firewall and allow Remote Desktop.</li> </ol>"},{"location":"os/windows/#setup-ssh-server-optional","title":"Setup SSH Server (Optional)","text":"<p>For remote command-line access: 1. Install OpenSSH Server (<code>Settings &gt; Optional Features &gt; Add Feature</code>). 2. Start the SSH service:    <pre><code>net start sshd\n</code></pre> 3. Connect via <code>ssh yourusername@yourserverIP</code>.</p>"},{"location":"os/windows/#6-install-ftp-server-file-transfers","title":"6. Install FTP Server (File Transfers)","text":"<ol> <li>Open Control Panel &gt; Programs &gt; Turn Windows features on or off.</li> <li>Enable Internet Information Services &gt; FTP Server.</li> <li>Open IIS Manager &gt; Add FTP Site.</li> <li>Set Binding &amp; SSL:</li> <li>IP: Static IP</li> <li>Port: 21</li> <li>SSL: No SSL (or use a certificate for security)</li> <li>Set Authentication &amp; Authorization:</li> <li>Authentication: Basic</li> <li>Authorization: Allow specific users or Everyone</li> <li>Permissions: Read &amp; Write</li> <li>Access FTP via <code>ftp://192.168.1.100</code>.</li> </ol>"},{"location":"os/windows/#7-install-docker-desktop-containerized-applications","title":"7. Install Docker Desktop (Containerized Applications)","text":"<p>Docker allows you to run applications in isolated containers.</p>"},{"location":"os/windows/#install-docker-desktop","title":"Install Docker Desktop:","text":"<ol> <li>Download from Docker\u2019s official site.</li> <li>Install and restart Windows.</li> <li>Enable WSL 2 Backend (<code>Settings &gt; Resources &gt; WSL Integration</code>).</li> <li>Open PowerShell and test:    <pre><code>docker --version\n</code></pre></li> </ol>"},{"location":"os/windows/#run-a-test-container","title":"Run a Test Container:","text":"<ol> <li>Pull an Nginx web server:    <pre><code>docker run -d -p 80:80 --name webserver nginx\n</code></pre></li> <li>Access via <code>http://localhost</code>.</li> <li>Use <code>docker ps</code> to check running containers.</li> </ol>"},{"location":"os/windows/#8-secure-your-server","title":"8. Secure Your Server","text":""},{"location":"os/windows/#firewall-configuration","title":"Firewall Configuration","text":"<ul> <li>Open Windows Defender Firewall.</li> <li>Create Inbound Rules for only required services.</li> <li>Block unused ports.</li> </ul>"},{"location":"os/windows/#install-ssl-for-websites","title":"Install SSL for Websites","text":"<ul> <li>Get a free SSL certificate from Let\u2019s Encrypt.</li> <li>Use Certbot to automate renewal.</li> </ul>"},{"location":"os/windows/#set-up-automatic-backups","title":"Set Up Automatic Backups","text":"<ul> <li>Use Windows Backup (<code>Control Panel &gt; Backup &amp; Restore</code>).</li> <li>Use robocopy or PowerShell scripts for scheduled backups.</li> </ul>"},{"location":"os/windows/#9-optimize-performance","title":"9. Optimize Performance","text":""},{"location":"os/windows/#disable-unnecessary-services","title":"Disable Unnecessary Services","text":"<p>Run <code>services.msc</code> and disable: - SysMain (Superfetch) if using an SSD. - Windows Search if not needed. - Xbox Services (for gaming-related background services).</p>"},{"location":"os/windows/#optimize-power-settings","title":"Optimize Power Settings","text":"<ul> <li>Set to High Performance (<code>Control Panel &gt; Power Options</code>).</li> <li>Disable Sleep/Hibernate to keep services running.</li> </ul>"},{"location":"os/windows/#conclusion","title":"Conclusion","text":"<p>By following these steps, you\u2019ve turned Windows 10/11 into a fully functional server capable of handling file sharing, web hosting, remote access, and containerized applications. \ud83d\ude80</p>"},{"location":"requirements/","title":"Requirements","text":""},{"location":"requirements/#hardware-requirements","title":"Hardware Requirements","text":"<ol> <li> <p>RAM: 4gb (minimum but 8gb would be better)</p> <ul> <li>Look at how many services you are going to run (up to 10 on 4gb). </li> <li>Unless running MC Server, then 8gb would be needed</li> <li>If you can afford to upgrade an old laptop to 8gb RAM, then do it. You will be grateful in the future</li> </ul> </li> <li> <p>Storage: 256gb SSD (boot), 500gb / 1TB HDD (storage)</p> <ul> <li>Storage depends on your needs. If you are going to be running a Media Server (TV Shows, Movies, Music, etc) go for the 1TB. Otherwise 500gb will be good for now</li> </ul> </li> <li>CPU: No real requirements. Must be made after 2010<ul> <li>Can be any architecture (ARM (x32 / x64), AMD (x64), Intel (x64)</li> </ul> </li> </ol>"},{"location":"requirements/#software-requirements","title":"Software Requirements","text":"<ol> <li>Windows<ul> <li>Windows 10 / 11</li> <li>Lower versions will not work due to Docker Desktop requirements and Jellyfin / Plex requires newer .NET packages</li> <li>Make sure to check if the OS is up to date (Settings -&gt; Windows Updates -&gt; Check for updates)</li> </ul> </li> <li>Linux<ul> <li>Ubuntu / Debian</li> <li>Ubuntu 22.04 LTS or higher (LTS - Long Term Support. Using LTS releases are recommended as it reduces the amount of times you have to upgrade)</li> <li>Update all repositories (apps, etc) Terminal -&gt; 'sudo apt update &amp;&amp; sudo apt upgrade' -&gt; Enter user password</li> </ul> </li> </ol>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/general/","title":"General","text":""}]}